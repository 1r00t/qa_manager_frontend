/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export interface paths {
  "/api/projects/": {
    /** Project List */
    get: operations["tests_api_project_list"];
    /** Project Create */
    post: operations["tests_api_project_create"];
  };
  "/api/projects/{project_id}": {
    /** Project Detail */
    get: operations["tests_api_project_detail"];
    /** Project Delete */
    delete: operations["tests_api_project_delete"];
    /** Project Update */
    patch: operations["tests_api_project_update"];
  };
  "/api/sections/": {
    /** Section List */
    get: operations["tests_api_section_list"];
    /** Section Create */
    post: operations["tests_api_section_create"];
  };
  "/api/sections/{section_id}": {
    /** Section Detail */
    get: operations["tests_api_section_detail"];
    /** Section Delete */
    delete: operations["tests_api_section_delete"];
    /** Section Update */
    patch: operations["tests_api_section_update"];
  };
  "/api/testcases/": {
    /** Testcases List */
    get: operations["tests_api_testcases_list"];
    /** Testcase Create */
    post: operations["tests_api_testcase_create"];
  };
  "/api/testcases/{case_id}": {
    /** Testcase Detail */
    get: operations["tests_api_testcase_detail"];
    /** Testcase Delete */
    delete: operations["tests_api_testcase_delete"];
    /** Testcase Update */
    patch: operations["tests_api_testcase_update"];
  };
  "/api/testruns/": {
    /** Testrun List */
    get: operations["tests_api_testrun_list"];
    /** Testrun Create */
    post: operations["tests_api_testrun_create"];
  };
  "/api/testruns/{run_id}": {
    /** Testrun Detail */
    get: operations["tests_api_testrun_detail"];
    /** Testrun Delete */
    delete: operations["tests_api_testrun_delete"];
  };
  "/api/testruns/project/{project_slug}": {
    /** Testrun By Project */
    get: operations["tests_api_testrun_by_project"];
  };
  "/api/testruns/{run_id}/add-cases": {
    /** Testrun Add Cases */
    patch: operations["tests_api_testrun_add_cases"];
  };
  "/api/testruns/{run_id}/remove-cases": {
    /** Testrun Remove Cases */
    patch: operations["tests_api_testrun_remove_cases"];
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    /** ProjectOut */
    ProjectOut: {
      /** Id */
      id: number;
      /** Name */
      name: string;
      /** Slug */
      slug: string;
    };
    /** ProjectIn */
    ProjectIn: {
      /** Name */
      name: string;
    };
    /** SectionOut */
    SectionOut: {
      /** Id */
      id: number;
      /** Section Hierachy */
      section_hierachy: (string)[];
      /** Full Section Hierachy */
      full_section_hierachy: string;
    };
    /** PagedSectionOut */
    PagedSectionOut: {
      /**
       * Items 
       * @default []
       */
      items?: (components["schemas"]["SectionOut"])[];
      /** Count */
      count: number;
    };
    /** SectionIn */
    SectionIn: {
      /** Name */
      name: string;
      /** Parent Id */
      parent_id?: number;
    };
    /** SectionPatch */
    SectionPatch: {
      /** Name */
      name?: string;
      /** Parent Id */
      parent_id?: number;
    };
    /** TestCaseOut */
    TestCaseOut: {
      /** Id */
      id: number;
      /** Case Id */
      case_id: string;
      /** Title */
      title: string;
      /** Is Automation */
      is_automation: boolean;
      section: components["schemas"]["SectionOut"];
      /** Expected Result */
      expected_result: string;
      /** Preconditions */
      preconditions: string;
      /** Get Type Display */
      type?: string;
      /**
       * Created At 
       * Format: date-time
       */
      created_at: string;
      /**
       * Updated At 
       * Format: date-time
       */
      updated_at: string;
    };
    /** PagedTestCaseOut */
    PagedTestCaseOut: {
      /**
       * Items 
       * @default []
       */
      items?: (components["schemas"]["TestCaseOut"])[];
      /** Count */
      count: number;
    };
    /**
     * TestType 
     * @description An enumeration. 
     * @enum {string}
     */
    TestType: "none" | "smoke" | "functional";
    /** TestCaseIn */
    TestCaseIn: {
      /** Case Id */
      case_id: string;
      /** Title */
      title: string;
      /** Is Automation */
      is_automation: boolean;
      /** Section Id */
      section_id: number;
      /** Expected Result */
      expected_result: string;
      /** Preconditions */
      preconditions: string;
      type: components["schemas"]["TestType"];
    };
    /** TestCasePatch */
    TestCasePatch: {
      /** Case Id */
      case_id?: string;
      /** Title */
      title?: string;
      /** Is Automation */
      is_automation?: boolean;
      /** Section Id */
      section_id?: number;
      /** Exected Result */
      exected_result?: string;
      /** Preconditions */
      preconditions?: string;
      type?: components["schemas"]["TestType"];
    };
    /** TestResultOut */
    TestResultOut: {
      /** Id */
      id: number;
      /** Test Case.Case Id */
      case_id?: string;
      section?: components["schemas"]["SectionOut"];
      /** Test Case.Title */
      title?: string;
      /** Get Status Display */
      status?: string;
      /** Details */
      details: string;
      /**
       * Created At 
       * Format: date-time
       */
      created_at: string;
      /**
       * Updated At 
       * Format: date-time
       */
      updated_at: string;
    };
    /** TestRunOut */
    TestRunOut: {
      /** Id */
      id: number;
      project: components["schemas"]["ProjectOut"];
      /** Title */
      title: string;
      /** Description */
      description: string;
      /** Get Environment Display */
      environment?: string;
      /** Testresult Set */
      testresult_set: (components["schemas"]["TestResultOut"])[];
      /**
       * Created At 
       * Format: date-time
       */
      created_at: string;
      /**
       * Updated At 
       * Format: date-time
       */
      updated_at: string;
    };
    /**
     * Environment 
     * @description An enumeration. 
     * @enum {string}
     */
    Environment: "dev" | "staging" | "live";
    /** TestRunIn */
    TestRunIn: {
      /** Project Id */
      project_id: number;
      /** Title */
      title: string;
      /** Description */
      description: string;
      environment: components["schemas"]["Environment"];
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type external = Record<string, never>;

export interface operations {

  tests_api_project_list: {
    /** Project List */
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": (components["schemas"]["ProjectOut"])[];
        };
      };
    };
  };
  tests_api_project_create: {
    /** Project Create */
    requestBody: {
      content: {
        "application/json": components["schemas"]["ProjectIn"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["ProjectOut"];
        };
      };
    };
  };
  tests_api_project_detail: {
    /** Project Detail */
    parameters: {
      path: {
        project_id: number;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["ProjectOut"];
        };
      };
    };
  };
  tests_api_project_delete: {
    /** Project Delete */
    parameters: {
      path: {
        project_id: number;
      };
    };
    responses: {
      /** @description OK */
      200: never;
    };
  };
  tests_api_project_update: {
    /** Project Update */
    parameters: {
      path: {
        project_id: number;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["ProjectIn"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["ProjectOut"];
        };
      };
    };
  };
  tests_api_section_list: {
    /** Section List */
    parameters?: {
      query?: {
        limit?: number;
        offset?: number;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["PagedSectionOut"];
        };
      };
    };
  };
  tests_api_section_create: {
    /** Section Create */
    requestBody: {
      content: {
        "application/json": components["schemas"]["SectionIn"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["SectionOut"];
        };
      };
    };
  };
  tests_api_section_detail: {
    /** Section Detail */
    parameters: {
      path: {
        section_id: number;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["SectionOut"];
        };
      };
    };
  };
  tests_api_section_delete: {
    /** Section Delete */
    parameters: {
      path: {
        section_id: number;
      };
    };
    responses: {
      /** @description OK */
      200: never;
    };
  };
  tests_api_section_update: {
    /** Section Update */
    parameters: {
      path: {
        section_id: number;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["SectionPatch"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["SectionOut"];
        };
      };
    };
  };
  tests_api_testcases_list: {
    /** Testcases List */
    parameters?: {
      query?: {
        limit?: number;
        offset?: number;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["PagedTestCaseOut"];
        };
      };
    };
  };
  tests_api_testcase_create: {
    /** Testcase Create */
    requestBody: {
      content: {
        "application/json": components["schemas"]["TestCaseIn"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["TestCaseOut"];
        };
      };
    };
  };
  tests_api_testcase_detail: {
    /** Testcase Detail */
    parameters: {
      path: {
        case_id: number;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["TestCaseOut"];
        };
      };
    };
  };
  tests_api_testcase_delete: {
    /** Testcase Delete */
    parameters: {
      path: {
        case_id: number;
      };
    };
    responses: {
      /** @description OK */
      200: never;
    };
  };
  tests_api_testcase_update: {
    /** Testcase Update */
    parameters: {
      path: {
        case_id: number;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["TestCasePatch"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["TestCaseOut"];
        };
      };
    };
  };
  tests_api_testrun_list: {
    /** Testrun List */
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": (components["schemas"]["TestRunOut"])[];
        };
      };
    };
  };
  tests_api_testrun_create: {
    /** Testrun Create */
    requestBody: {
      content: {
        "application/json": components["schemas"]["TestRunIn"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["TestRunOut"];
        };
      };
    };
  };
  tests_api_testrun_detail: {
    /** Testrun Detail */
    parameters: {
      path: {
        run_id: number;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["TestRunOut"];
        };
      };
    };
  };
  tests_api_testrun_delete: {
    /** Testrun Delete */
    parameters: {
      path: {
        run_id: number;
      };
    };
    responses: {
      /** @description OK */
      200: never;
    };
  };
  tests_api_testrun_by_project: {
    /** Testrun By Project */
    parameters: {
      path: {
        project_slug: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": (components["schemas"]["TestRunOut"])[];
        };
      };
    };
  };
  tests_api_testrun_add_cases: {
    /** Testrun Add Cases */
    parameters: {
      path: {
        run_id: number;
      };
    };
    requestBody: {
      content: {
        "application/json": (number)[];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["TestRunOut"];
        };
      };
    };
  };
  tests_api_testrun_remove_cases: {
    /** Testrun Remove Cases */
    parameters: {
      path: {
        run_id: number;
      };
    };
    requestBody: {
      content: {
        "application/json": (number)[];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": (number)[];
        };
      };
    };
  };
}
